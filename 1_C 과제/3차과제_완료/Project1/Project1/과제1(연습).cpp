// 스택으로 재귀 대신하기.

#include <stdio.h>
#include <windows.h>
#include "Stack.h"

#define HEIGHT_LEN 11
#define WIDTH_LEN 30

void Print();
void Change();

char cOriginal[HEIGHT_LEN][WIDTH_LEN] =
{
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0','0','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0',' ','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0','0','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0','0','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', ' ', '0', '0', ' ', '0','0','0',' ','0','0','0','0',' ' ,'0' ,' ' ,'0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,' ' ,'0' ,'0' },
	{ '0', ' ', '0', ' ', '0', '0', ' ', '0','0','0',' ','0','0','0','0',' ' ,'0' ,'0' ,'0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,' ' ,'0' ,'0' },
	{ '0', '0', '0', ' ', '0', '0', ' ', '0','0','0',' ','0','0','0','0',' ' ,'0' ,' ' ,'0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,' ' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0','0','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0','0','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', ' ','0','0',' ','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },
	{ '0', '0', '0', '0', '0', '0', '0', '0','0','0','0','0','0','0','0','0' ,'0' ,' ' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' ,'0' },

};

char cBuffer[HEIGHT_LEN][WIDTH_LEN];

Stack stack;

int main()
{
	StackInit(&stack);

	int i;
	int j;
	bool bSave = true;

	while (1)
	{
		for (i = 0; i < HEIGHT_LEN; ++i)
		{
			for (j = 0; j < WIDTH_LEN; ++j)
			{
				cBuffer[i][j] = cOriginal[i][j];
			}
		}

		Print();
		Sleep(1000);	

		bSave = Push(&stack, 10, 3);	//기준점
		if (bSave == false)
		{
			puts("스택 꽉참!");
			system("pause");
		}
		
		Change();
		Sleep(1000);
	}

	return 0;
}

void Print()
{
	int i;
	int j;
	system("cls");

	for (i = 0; i < HEIGHT_LEN; ++i)
	{
		for (j = 0; j < WIDTH_LEN; ++j)
		{
			printf("%c", cBuffer[i][j]);
		}
		fputs("\n", stdout);
	}
	Sleep(2);
}

void Change()
{
	int i;
	int j;
	bool bSave = true;

	bSave = Pop(&stack, &i, &j);
	if (bSave == false)
	{
		puts("스택 빔!");
		system("pause");
	}

	// 벽 체크 조건
	if (cBuffer[i][j] == '*' || cBuffer[i][j] == ' ')
		return;

	// 위 리턴조건
	if (i < 0)
		return;

	// 우측 리턴 조건
	if (j >= WIDTH_LEN)
		return;

	// 좌측 리턴 조건
	if (j < 0)
		return;

	//아래 리턴 조건
	if (i >= HEIGHT_LEN)
		return;


	cBuffer[i][j] = '*';
	Print();

	bSave = Push(&stack, i, j - 1);
	if (bSave == false)
	{
		puts("스택 꽉참!");
		system("pause");
	}
	Change();   //좌

	bSave = Push(&stack, i, j + 1);
	if (bSave == false)
	{
		puts("스택 꽉참!");
		system("pause");
	}
	Change();	//우

	bSave = Push(&stack, i-1, j);
	if (bSave == false)
	{
		puts("스택 꽉참!");
		system("pause");
	}
	Change();	//상

	bSave = Push(&stack, i + 1, j);
	if (bSave == false)
	{
		puts("스택 꽉참!");
		system("pause");
	}
	Change();	//하
}