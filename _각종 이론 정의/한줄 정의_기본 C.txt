시프트 연산자
- 왼쪽 시프트 연산(<<)을 할 시, 비는 값은 0으로 채운다.
- 오른쪽 시프트 연산(>>)을 할 시, 비는 값으로 양수일 경우 0 / 음수일 경우 1을 채운다.
- 산술 시프트 / 논리 시프트로 나뉜다.

논리 시프트
- 산술 시프트와 달리 MSB를 지키지 않으며, 빈 값은 무조건 0으로 채운다.

산술 시프트
- MSB를 지키기 때문에, 음수를 >> 연산하면 MSB로 1을 채운다.

오른쪽 시프트 연산자에서 음/양수일 때 채우는 값이 달라지는 이유
- 기본적으로 가장 상위 1비트(Most Significant Bit)를 확인하는데, 음수를 >>했는데 0으로 채우면, 음수가 아니게 되어버린다.
- 때문에 음수일 경우 최상위비트 1은 계속 넣어줘야 함

워드 단위 복사
- 예를들어 워드가 8바이트일 경우 8바이트는 한 번에 복사된다.
- 하지만, 워드보다 크기가 크다면 바이트 단위 복사가 일어난다.

전역변수에 static일 붙일 경우
- 해당 파일에서만 사용한다는 의미. 다른 파일에서는 접근 불가능

라이브러리란?
- 유용한 기능을 제공하는 코드 집합.
- Class나 Function으로 이루어짐