스핀락의 장점
- 커널모드 전환 부담이 적다(즉, 컨텍스트 스위칭 부담이 적다)
- 각 스레드가, 자기 자신에게 할당된 타임슬라이스만큼 일을 하기 때문에, 스케쥴러가 일을 덜한다 --> 즉 스레드가 일할 시간이 더 늘어난다.

IP계층에서 데이터를 쪼개는 이유
- 중계하는 패킷의 크기가 출력 포트의 패킷 최대 길이를 초과할 경우 (MTU를 넘을 경우)
- 즉, 각 라우터마다 처리 가능한 MTU사이즈가 다르기 때문에 데이터가 쪼개진다.

IP계층에서 데이터가 쪼개졌을 때 문제점
- 데이터가 중간에 쪼개졌을 경우, 전송되는 패킷의 수 자체가 늘어나기 때문에 네트워크가 혼잡해진다.

라우팅 중 패킷이 소실되는 상황
- 보내는 측에서 분할 플래그를 끈 상태인데, 중간에 MTU의 크기가 더 작은 라우터를 만날 때. ICMP를 보낸 후 파기
- 이미 분할된 패킷을 또 분할하려고 할 때. ICMP를 보낸 후 파기
- 분할을 할 수 없는 라우터일 경우. ICMP를 보낸 후 파기

IOCP 장점 
- wait thread queue는 스택 구조로 관리 : 스택구조의 스레드 관리로 인해, 스레드가 계속 Running 상태에 유지되어 컨텍스트 스위칭 부담이 적다.
- 합리적인 스레드 풀링 : 기존 컨커런트 모델은 연결 1개당 스레드 1개를 제작. IOCP는 지정한 수 만큼의 스레드를 만들어 많은 연결을 처리. 컨커런트 모델에 비해 적은 스레드 수로 많은 연결을 처리 가능.

함수 프로시저의 장점
- 정의 : DB에 존재하는 함수 기능으로, 쿼리들을 모아둔 집합
- 장점 1 : 한번의 쿼리 호출로 여러개의 쿼리를 호출
- 장점 2 : 네이티브 서버 입장에서는 부담을 DB로 전가해 확보한 시간동안 일을 더 할 수 있다.

릴라이어블 UDP에 대해 다시 정리
- 신뢰성 있는 UDP 이며, 게임업계에서는 TCP의 3way, 4way handshake가 무거워서 신뢰있는 UDP를 구축한다.
- 데이터 순서 보장 / 도착 보장(재전송) / 무결성 보장
- Seq넘버와 Ack를 통해 순서와 무결성 보장.
- 또한, 도착 보장을 위해 슬라이딩 윈도우 구현